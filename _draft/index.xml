<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>_drafts on Physics to Data Science</title>
    <link>https://physhik.github.io/_draft/</link>
    <description>Recent content in _drafts on Physics to Data Science</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Sep 2017 16:50:00 -0700</lastBuildDate>
    
	<atom:link href="https://physhik.github.io/_draft/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Atom</title>
      <link>https://physhik.github.io/_draft/2017-09-09-jekyll-atom-git/</link>
      <pubDate>Sat, 09 Sep 2017 16:50:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-09-09-jekyll-atom-git/</guid>
      <description>Atom 
Git and Github have become one of the essential part of programmers. I just mechanically commit just after I finish a code or change some setting, and it saved me so many times. It also provides great environment for teamwork and management of the projects. This Jekyll blog is also built upon the Github service.

Atom is the text editor developed by Github. And this is great.</description>
    </item>
    
    <item>
      <title>Algorithm Study (1) : Dynamic Programming</title>
      <link>https://physhik.github.io/_draft/2017-08-18-dynamicprogramming/</link>
      <pubDate>Fri, 18 Aug 2017 11:25:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-08-18-dynamicprogramming/</guid>
      <description>Algorithm

This is mainly a Python-implementation of the book, Cracking the coding interview, which includes examples and chosen exercises. Since I have studied algorithm of programming with Python and the Problem Solving with Algorithms and Data Structures using Python, I would review about them, too.

Actually, I started to solve the exercises of the chapter 8 (dynamic programming) because I thought I have a hole that Problem Solving with Algorithms and Data Structures using Python does not contain it.</description>
    </item>
    
    <item>
      <title>networkx (3)</title>
      <link>https://physhik.github.io/_draft/2017-08-17-networkx_practice3/</link>
      <pubDate>Thu, 17 Aug 2017 21:25:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-08-17-networkx_practice3/</guid>
      <description>hash hashable from glossary An object is hashable if it has a hash value which never changes during its lifetime (it needs a hash() method), and can be compared to other objects (it needs an eq() or cmp() method). Hashable objects which compare equal must have the same hash value.
Hashability makes an object usable as a dictionary key and a set member, because these data structures use the hash value internally.</description>
    </item>
    
    <item>
      <title>networkx (2)</title>
      <link>https://physhik.github.io/_draft/2017-08-16-networkx_practice2/</link>
      <pubDate>Wed, 16 Aug 2017 22:50:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-08-16-networkx_practice2/</guid>
      <description>Let us start from the same graph, G of the previous posting.

import networkx as nx import matplotlib.pyplot as plt %matplotlib inline  
** DiGraph
I=nx.DiGraph(G)  I.nodes(data=True)  [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (&#39;m&#39;, {}), (&#39;p&#39;, {}), (&#39;s&#39;, {}), (&#39;a&#39;, {}), (&#39;spam&#39;, {})]  G.nodes(data=True)  [(0, {}), (1, {}), (2, {}), (3, {}), (4, {}), (5, {}), (6, {}), (7, {}), (8, {}), (9, {}), (10, {}), (11, {}), (&#39;m&#39;, {}), (&#39;p&#39;, {}), (&#39;spam&#39;, {}), (&#39;s&#39;, {}), (&#39;a&#39;, {})]  G.</description>
    </item>
    
    <item>
      <title>networkx (1)</title>
      <link>https://physhik.github.io/_draft/2017-08-16-networkx_practice/</link>
      <pubDate>Wed, 16 Aug 2017 16:50:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-08-16-networkx_practice/</guid>
      <description>While studying deep learning, to understand graph and networks is necessary.

I try to follow the tutorial and references from the Github of networkx. The homepage of networkx is designed to have better interface, but some codes are not updated. I also added up some comments for better understanding.

import networkx as nx import matplotlib.pyplot as plt %matplotlib inline  
Node 
Initiate empty graph</description>
    </item>
    
    <item>
      <title>jekyll과 주어진 테마를 이용해서 만든 Github 블로그에 Disqus 추가하기</title>
      <link>https://physhik.github.io/_draft/2017-08-14-jekyll/</link>
      <pubDate>Mon, 14 Aug 2017 22:50:00 -0700</pubDate>
      
      <guid>https://physhik.github.io/_draft/2017-08-14-jekyll/</guid>
      <description>Github은 저같은 풋내기 프로그래머들에게는 환상적인 공간입니다.
이번엔 블로그를 만들어 봤는데요. 적절한 한국어로 된 설명이 드물거나 찾기 힘든 것 같아서 포스팅 해봅니다.
특히 jekyll 언어를 충분히 공부하지 않은 상태에서 특정 테마를 다운받아서 사용할 경우에 경험할 수 있는 시행착오를 범하지 않도록 하는 방향입니다.
영어로 된 게시물들은 구글링으로 쉽게 얻을 수 있습니다.

이 포스팅 또한 jekyll 홈페이지와 Sechter의 블로그의 내용의 번역이 주가 될 예정이니 더 자세한 내용을 원하시면 해당 링크로 들어가서 확인하시기 바랍니다.</description>
    </item>
    
  </channel>
</rss>